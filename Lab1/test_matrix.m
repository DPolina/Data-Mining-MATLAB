clear all
close all

disp("Задание 5 ");
%"Введите в test_matrix.m описанные выше процедуры объявления 
% вектора и матрицы, процедуры доступа к элементам вектора и матрицы, поиск 
% минимального и максимального элемента в матрице. Просмотрите результат в
% командном окне.

V=[1 2 3 4 5] % Создание вектора
M=[1 2 3 4 5; 6 7 8 9 10; 11 12 13 14 15] % Создание матрицы

disp("Доступ к отдельным элементам вектора и матрицы: ");

disp(V(3));
disp(M(2,3));
disp(M(:,3));
disp(M(2,:));

disp(['Добавление и удаление столбцов матрицы. ', ...
    'Добавление строки к матрице: ']); 

M=[1 2 3 4 5; 1 2 3 4 5; 1 2 3 4 5]
S=[1 2 3 4 5]
M=[M;S]

disp("Добавление столбца к матрице: ");

M=[1 2 3 4 5; 1 2 3 4 5; 1 2 3 4 5]
S=[1; 2; 3]
M=[M,S]

disp("Удаление всего третьего столбца матрицы M: ");
M(:,3)=[ ]
disp("Удаление всей второй строки матрицы M: ");
M(2,:)=[ ]

disp("Задание 6"); 
% Объявите матрицу C размерности 5 строк на 5 столбцов с 
% произвольными элементами. С помощью функций min, max найдите минимальные
% и максимальные элементы по строкам, по столбцам и по всей матрице.

C = randi([1, 19], [5, 5])

disp("Поиск минимумов и максимумов по строкам: ");
min_rows = min(C,[],2) 
max_rows = max(C,[],2) 

disp("Поиск минимумов и максимумов по столбцам: ");
min_cols = min(C,[],1)
max_cols = max(C,[],1) 

disp("Поиск минимума и максимума по всей матрице: ");
min_all = min(min_cols) 
max_all = max(max_cols)

disp("Задание 7"); 
% Получить решение x заданной системы линейных уравнений вида 
% A* x = B, где A – квадратная матрица nxn, B – вектор размерности n. 
% Решение данной системы уравнений можно получить, набрав строку кода.

n = 4;
min = 0; 
max = 9;

A = randi([min, max], [n, n])
B = randi([min, max], [n, 1])
x = inv(A)*B

disp("test: ");
B = A * x


